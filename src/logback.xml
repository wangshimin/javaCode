<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!--        CONSOLE ：表示当前的日志信息是可以输出到控制台的。    -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <!--输出流对象 默认 System.out 改为 System.err-->
        <target>System.out</target>
        <encoder>
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度
                %msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5level] %c [%thread] : %msg%n</pattern>
        </encoder>
    </appender>

    <!-- File是输出的方向通向文件的 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
            <charset>utf-8</charset>
        </encoder>
        <!--日志输出路径-->
        <file>/Users/wangshimin/study/java/log/study.log</file>
        <!--指定日志文件拆分和压缩规则-->
        <rollingPolicy
                class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--通过指定压缩文件名称，来确定分割文件方式-->
            <fileNamePattern>/Users/wangshimin/study/java/log/study-%i-%d{yyyy-MM-dd}-.log.gz</fileNamePattern>
            <!--文件拆分大小-->
            <maxFileSize>1MB</maxFileSize>
        </rollingPolicy>
    </appender>

    <!--        控制日志的输出情况：如，开启日志，取消日志    -->
    <!--
        level：日志级别，忽略大小写，级别程度依次是：trace < debug（默认） < info < warn < error，其中all 和 off分别是打开全部日志信息、关闭全部日志信息。
        日志级别作用：用于控制系统中哪些日志级别是可以输出的，只输出级别不低于设定级别的日志信息。
        <root>可以包含零个或者多个appender，标志这个输出位置将被本日志级别控制，如果<root>没有配置appender，则日志不会输出。
    -->
    <root level="debug">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE"/>
    </root>
</configuration>